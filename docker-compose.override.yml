version: '3'

services:
  elsadb:
    container_name: elsadb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  smtp4dev:
    restart: always
    ports:
      - '3000:80'
      - '2525:25'
      - '143:143'
    volumes:
        - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev
   elsa.server:
     container_name: elsaserver
     restart: always
     environment:
       - ASPNETCORE_ENVIRONMENT=Development
       - ConnectionStrings:ElsaDb=mongodb://elsadb:27017/Elsa
       - ConnectionStrings:Redis=redis:6379,abortConnect=false
       - ConnectionStrings:RabbitMq=amqp://rabbitmq:5672
       - Elsa:Server:BaseUrl=http://localhost:8054
       - Elsa:Smtp:Host=smtp4dev
       - Elsa:Smtp:Port=25
     ports:
       - "8054:80"
     depends_on:
       - elsadb
       - rabbitmq
       - redis
  rabbitmq:
    restart: always
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  redis:
    restart: always
    image: redis:5.0-alpine
    ports:
      - 6379:6379
   mssql:
     restart: always
     ports:
       - "1433:1433"
     environment:
       SA_PASSWORD: "Pass1234"
       ACCEPT_EULA: "Y"
     volumes:
       - sqlsystem:/var/opt/mssql/
       - sqldata:/var/opt/sqlserver/data
       - sqllog:/var/opt/sqlserver/log
       - sqlbackup:/var/opt/sqlserver/backup
   orderitems.api:
     container_name: orderitemsapi
     restart: always
     environment:
       - ASPNETCORE_ENVIRONMENT=Development
     ports:
       - "5010:80"

   newprojectapprovalapi:
     container_name: newprojectapprovalapi
     restart: always
     environment:
       - ASPNETCORE_ENVIRONMENT=Development
       - "ConnectionStrings:ElsaProjectApiDB=Server=mssql;Database=ElsaProjectApiDB;User=sa;Password=Pass1234"
     ports:
       - "5011:80"
