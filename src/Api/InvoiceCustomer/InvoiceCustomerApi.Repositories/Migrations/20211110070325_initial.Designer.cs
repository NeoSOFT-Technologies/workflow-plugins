// <auto-generated />
using System;
using InvoiceCustomerApi.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvoiceCustomerApi.Repositories.Migrations
{
    [DbContext(typeof(DbContexts))]
    [Migration("20211110070325_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("InvoiceCustomerApi.Entities.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = new Guid("1213179a-7837-473a-a4d5-a5571b43e6a6"),
                            ClientName = "Ankit",
                            Email = "ankit@gmail.com",
                            Phone = "9873892812"
                        },
                        new
                        {
                            ClientId = new Guid("2413179a-7837-493a-a4d5-a5571b43e6a6"),
                            ClientName = "Neha",
                            Email = "neha@gmail.com",
                            Phone = "9173292812"
                        });
                });

            modelBuilder.Entity("InvoiceCustomerApi.Entities.Invoice", b =>
                {
                    b.Property<Guid>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInvoicePaid")
                        .HasColumnType("bit");

                    b.Property<int>("NumberofResource")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("ClientId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            InvoiceId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            Amount = 2000m,
                            ClientId = new Guid("1213179a-7837-473a-a4d5-a5571b43e6a6"),
                            Date = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsInvoicePaid = false,
                            NumberofResource = 10
                        },
                        new
                        {
                            InvoiceId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            Amount = 3000m,
                            ClientId = new Guid("2413179a-7837-493a-a4d5-a5571b43e6a6"),
                            Date = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsInvoicePaid = false,
                            NumberofResource = 9
                        });
                });

            modelBuilder.Entity("InvoiceCustomerApi.Entities.Invoice", b =>
                {
                    b.HasOne("InvoiceCustomerApi.Entities.Client", "Client")
                        .WithMany("Invoice")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("InvoiceCustomerApi.Entities.Client", b =>
                {
                    b.Navigation("Invoice");
                });
#pragma warning restore 612, 618
        }
    }
}
